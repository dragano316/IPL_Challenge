{"version":3,"sources":["components/header/header.js","components/infoboxes/infobox.js","components/charts/chart.js","components/data_visual_stats/data_visual_stats.js","App.js","serviceWorker.js","index.js","img/atlanlogo.svg","assets/Match.csv","assets/Player.csv","assets/Ball_by_Ball.csv","assets/Season.csv"],"names":["Header","className","style","position","height","backgroundColor","boxShadow","left","right","top","zIndex","margin","width","padding","textAlign","href","src","atlanlogo","alt","Component","Infobox","props","state","data","title","text","this","setState","Charts","chartData","selectChart","type","options","plugins","deferred","xOffset","yOffset","delay","maintainAspectRatio","responsive","display","displayTitle","titleText","fontSize","legend","displayLegend","scales","xAxis","gridLineWidth","yAxis","minorTickInterval","xAxes","scaleLabel","selectLabel","labelString","selectLabelText","yAxes","ticks","beginAtZero","defaultProps","legendPosition","DataContent","componentDidMount","fetchData","Papa","parse","Match","header","download","dynamicTyping","complete","savingmatch","Player","savingplayer","Ball_by_Ball","savingballbyball","Season","savingseason","res","infochart1","infochart2","infochart3","infochart8","databox_2_4_8","infochart4","infochart5","infochart6","databox_3_5","BallByBall","infochart7","databox_6_7","databox_1","batcount","Object","keys","length","forEach","e","Toss_Decision","chartinfo1","labels","datasets","label","borderColor","borderWidth","countries","undefined","Host_Country","Match_Id","chartinfo2","values","winType","Win_Type","chartinfo3","handType","Left_Hand","Right_Hand","Batting_Hand","chartinfo4","bowlingSkill","Bowling_Skill","Player_Id","chartinfo5","nationality","Country","chartinfo6","dismissalType","Dissimal_Type","chartinfo7","cities","City_Name","chartinfo8","totalseasons","infobox1","superovers","duckworthlewis","i","IS_Superover","Is_DuckWorthLewis","infobox2","infobox4","infobox8","totalplayers","umpires","Is_Umpire","infobox3","infobox5","fours","sixes","Batsman_Scored","infobox6","infobox7","Infobox5","fontWeight","marginTop","marginBottom","color","App","background","overflowY","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"yMA8BeA,E,uKAzBP,OACI,yBAAKC,UAAU,SAASC,MAAO,CACCC,SAAS,QACTC,OAAQ,OACRC,gBAAiB,UACjBC,UAAW,wDACXC,KAAM,MACNC,MAAO,MACPC,IAAK,MACLC,OAAQ,QAEpC,yBAAKT,UAAU,aAAaC,MAAO,CAACS,OAAQ,SACRC,MAAO,MACPR,OAAQ,OACRS,QAAS,WACTC,UAAW,WAE3C,uBAAGC,KAAK,qBAAoB,yBAAKb,MAAO,CAACU,MAAM,OAAOR,OAAO,QAAQY,IAAKC,IAAWC,IAAI,gB,GAnBxFC,a,wBCsCNC,G,8DArCX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,KAAM,EAAKF,MAAME,KACjBC,MAAO,EAAKH,MAAMG,MAClBC,KAAM,EAAKJ,MAAMI,MALP,E,+EAYdC,KAAKC,SAAS,CACVJ,KAAMG,KAAKL,MAAME,KACjBC,MAAOE,KAAKL,MAAMG,MAClBC,KAAMC,KAAKL,MAAMI,S,+BAMrB,OACI,yBAAKxB,UAAU,WACX,yBAAKA,UAAU,iBACX,2BAAIyB,KAAKL,MAAMG,QAEnB,yBAAKvB,UAAU,gBACX,2BAAIyB,KAAKL,MAAMI,OAEnB,yBAAKxB,UAAU,gBACVyB,KAAKL,MAAME,W,GA/BVJ,c,yBCChBS,E,kDACF,WAAYP,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTO,UAAW,EAAKR,MAAMQ,UACtBC,YAAa,EAAKT,MAAMS,aAJd,E,+EASdJ,KAAKC,SAAS,CACVE,UAAWH,KAAKL,MAAMQ,UACtBC,YAAaJ,KAAKL,MAAMS,gB,+BAe5B,OACI,yBAAK7B,UAAU,SACX,kBAAC,IAAD,CACI8B,KAAML,KAAKJ,MAAMQ,YACjBP,KAAMG,KAAKJ,MAAMO,UAAYH,KAAKJ,MAAMO,UAAY,GACpDG,QAAS,CACLC,QAAS,CACLC,SAAU,CACRC,QAAS,GACTC,QAAS,MACTC,MAAO,KAGbC,qBAAqB,EACrBC,YAAY,EACZf,MAAO,CACHgB,QAASd,KAAKL,MAAMoB,aACpBhB,KAAMC,KAAKL,MAAMqB,UACjBC,SAAU,IAEdC,OAAQ,CACJJ,QAASd,KAAKL,MAAMwB,eAExBC,OAAmC,QAA3BpB,KAAKL,MAAMS,YACnB,CACIiB,MAAO,CAAC,CACJC,cAAe,IAEnBC,MAAO,CAAC,CACJD,cAAe,EACfE,kBAAmB,QAG1B,CACGC,MAAM,CAAC,CACHC,WAAY,CACRZ,UAASd,KAAKL,MAAMgC,YACpBC,YAAa5B,KAAKL,MAAMkC,mBAGhCC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAY,c,GArE3BvC,aAAfS,EAgBK+B,aAAe,CAClB7B,YAAa,MACbW,cAAc,EACdC,UAAW,gBACXG,eAAe,EACfe,eAAgB,SAChBP,aAAa,EACbE,gBAAiB,IAyDV3B,Q,oECsmBAiC,E,kDA7qBX,aAAc,IAAD,8BACT,gBA0BJC,kBAAkB,WACd,EAAKC,aA5BI,EAgCbA,UAAY,WACRC,IAAKC,MAAMC,IAAO,CACdC,QAAQ,EACRC,UAAU,EACVC,eAAe,EACfC,SAAU,EAAKC,cAEnBP,IAAKC,MAAMO,IAAQ,CACfL,QAAQ,EACRC,UAAU,EACVC,eAAe,EACfC,SAAU,EAAKG,eAElBT,IAAKC,MAAMS,IAAc,CACtBP,QAAQ,EACRC,UAAU,EACVC,eAAe,EACfC,SAAU,EAAKK,mBAElBX,IAAKC,MAAMW,IAAQ,CAChBT,QAAQ,EACRC,UAAU,EACVC,eAAe,EACfC,SAAU,EAAKO,gBAvDV,EA6DbN,YAAa,SAACO,GACT,EAAKnD,SAAS,CAAEuC,MAAOY,IACvB,EAAKC,aACL,EAAKC,aACL,EAAKC,aACL,EAAKC,aACL,EAAKC,iBAnEG,EAqEbV,aAAc,SAACK,GACV,EAAKnD,SAAS,CAAE6C,OAAQM,IACxB,EAAKM,aACL,EAAKC,aACL,EAAKC,aACL,EAAKC,eA1EG,EA4EbZ,iBAAmB,SAACG,GACb,EAAKnD,SAAS,CAAE6D,WAAYV,IAE9B,EAAKW,aACJ,EAAKC,eAhFE,EAkFbb,aAAe,SAACC,GACX,EAAKnD,SAAS,CAACiD,OAAQE,IACvB,EAAKa,aApFG,EAwFbZ,WAAa,WAET,IAAIa,EAAW,EAC6B,IAAzCC,OAAOC,KAAK,EAAKxE,MAAM4C,OAAO6B,SAC7B,EAAKzE,MAAM4C,MAAM3C,KAAKyE,SAAQ,SAAAC,GACH,QAApBA,EAAEC,eACDN,OAIR,EAAKjE,SAAS,CACVwE,WAAY,CACRC,OAAQ,CAAC,MAAO,SAChBC,SAAU,CACN,CACIC,MAAO,wBACP/E,KAAM,CAACqE,EAAU,EAAKtE,MAAM4C,MAAM3C,KAAKwE,OAASH,GAChDvF,gBAAiB,CACb,yBACA,2BAEJkG,YAAa,CACT,sBACA,wBAEJC,YAAa,SAjHxB,EAyHbxB,WAAa,WAET,IAAIyB,EAAY,GAC4B,IAAzCZ,OAAOC,KAAK,EAAKxE,MAAM4C,OAAO6B,SAC7B,EAAKzE,MAAM4C,MAAM3C,KAAKyE,SAAQ,SAAAC,QACOS,IAA9BD,EAAUR,EAAEU,cACXF,EAAUR,EAAEU,eAAiB,EAE1BV,EAAEW,SAAS,IACVH,EAAUR,EAAEU,cAAgB,MAKxC,EAAKhF,SAAS,CACVkF,WAAY,CACRT,OAAO,YAAKP,OAAOC,KAAKW,IACxBJ,SAAU,CACN,CACIC,MAAO,iBACP/E,KAAK,YAAKsE,OAAOiB,OAAOL,IACxBpG,gBAAiB,CACb,0BACA,0BACA,2BAEJkG,YAAa,CACT,uBACA,uBACA,wBAEJC,YAAa,SAxJxB,EAiKbvB,WAAa,WAET,IAAI8B,EAAU,GAC8B,IAAzClB,OAAOC,KAAK,EAAKxE,MAAM4C,OAAO6B,SAC7B,EAAKzE,MAAM4C,MAAM3C,KAAKyE,SAAQ,SAAAC,QACCS,IAAxBK,EAAQd,EAAEe,UACTD,EAAQd,EAAEe,WAAa,EAEpBf,EAAEW,SAAS,IACVG,EAAQd,EAAEe,UAAY,MAMlC,EAAKrF,SAAS,CACVsF,WAAY,CACRb,OAAO,YAAKP,OAAOC,KAAKiB,IACxBV,SAAU,CACN,CACIC,MAAO,cACP/E,KAAK,YAAKsE,OAAOiB,OAAOC,IACxB1G,gBAAiB,CACb,0BACA,0BACA,0BACA,2BAEJkG,YAAa,CACT,uBACA,uBACA,uBACA,wBAEJC,YAAa,SAnMxB,EA4MbpB,WAAa,WAET,IAAI8B,EAAW,GAC8B,IAA1CrB,OAAOC,KAAK,EAAKxE,MAAMkD,QAAQuB,SAC9BmB,EAASC,UAAY,EACrBD,EAASE,WAAa,EACtB,EAAK9F,MAAMkD,OAAOjD,KAAKyE,SAAQ,SAAAC,GACL,cAAnBA,EAAEoB,cAAmD,eAAnBpB,EAAEoB,eACnCH,EAASjB,EAAEoB,eAAiB,MAIpC,EAAK1F,SAAS,CACV2F,WAAY,CACRlB,OAAO,YAAKP,OAAOC,KAAKoB,IACxBb,SAAU,CACN,CACIC,MAAO,+BACP/E,KAAK,YAAKsE,OAAOiB,OAAOI,IACxB7G,gBAAiB,CACb,0BACA,2BAEJkG,YAAa,CACT,uBACA,wBAEJC,YAAa,SAvOxB,EAgPbnB,WAAa,WAET,IAAIkC,EAAe,GAC0B,IAA1C1B,OAAOC,KAAK,EAAKxE,MAAMkD,QAAQuB,SAC9B,EAAKzE,MAAMkD,OAAOjD,KAAKyE,SAAQ,SAAAC,QACUS,IAAlCa,EAAatB,EAAEuB,eACdD,EAAatB,EAAEuB,gBAAkB,EAEjB,MAAbvB,EAAEwB,WAAqC,SAAlBxB,EAAEuB,gBACtBD,EAAatB,EAAEuB,eAAiB,MAO5C,EAAK7F,SAAS,CACV+F,WAAY,CACRtB,OAAO,YAAKP,OAAOC,KAAKyB,IACxBlB,SAAU,CACN,CACIC,MAAO,gBACP/E,KAAK,YAAKsE,OAAOiB,OAAOS,IACxBlH,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,yBACA,0BACA,0BACA,0BACA,0BACA,yBACA,0BACA,yBACA,yBACA,yBACA,2BAEJkG,YAAa,CACT,uBACA,uBACA,uBACA,uBACA,sBACA,uBACA,uBACA,uBACA,uBACA,sBACA,uBACA,sBACA,sBACA,sBACA,wBAEJC,YAAa,SAzSxB,EAkTblB,WAAa,WAET,IAAIqC,EAAc,GAC2B,IAA1C9B,OAAOC,KAAK,EAAKxE,MAAMkD,QAAQuB,SAC9B,EAAKzE,MAAMkD,OAAOjD,KAAKyE,SAAQ,SAAAC,QACGS,IAA3BiB,EAAY1B,EAAE2B,SACbD,EAAY1B,EAAE2B,UAAY,EAEV,MAAb3B,EAAEwB,YACDE,EAAY1B,EAAE2B,SAAW,MAKrC,EAAKjG,SAAS,CACVkG,WAAY,CACRzB,OAAO,YAAKP,OAAOC,KAAK6B,IACxBtB,SAAU,CACN,CACIC,MAAO,qBACP/E,KAAK,YAAKsE,OAAOiB,OAAOa,IACxBtH,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,yBACA,0BACA,0BACA,0BACA,0BACA,0BAEJkG,YAAa,CACT,uBACA,uBACA,uBACA,uBACA,sBACA,uBACA,uBACA,uBACA,uBACA,uBAEJC,YAAa,SA/VxB,EAyWbf,WAAa,WAET,IAAIqC,EAAgB,GAC6B,IAA9CjC,OAAOC,KAAK,EAAKxE,MAAMkE,YAAYO,SAClC,EAAKzE,MAAMkE,WAAWjE,KAAKyE,SAAQ,SAAAC,QACOS,IAAnCoB,EAAc7B,EAAE8B,eACfD,EAAc7B,EAAE8B,gBAAkB,OAEVrB,IAApBT,EAAE8B,eAAmD,MAApB9B,EAAE8B,gBACvCD,EAAc7B,EAAE8B,eAAiB,MAKzC,EAAKpG,SAAS,CACVqG,WAAY,CACR5B,OAAO,YAAKP,OAAOC,KAAKgC,IACxBzB,SAAU,CACN,CACIC,MAAO,sBACP/E,KAAK,YAAKsE,OAAOiB,OAAOgB,IACxBzH,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,yBACA,0BACA,0BACA,0BACA,2BAEJkG,YAAa,CACT,uBACA,uBACA,uBACA,uBACA,sBACA,uBACA,uBACA,uBACA,wBAEJC,YAAa,SApZxB,EA4ZbtB,WAAa,WAET,IAAI+C,EAAO,GACP,EAAK3G,MAAM4C,MAAM3C,KAAKyE,SAAQ,SAAAC,QACCS,IAAxBuB,EAAOhC,EAAEiC,WACRD,EAAOhC,EAAEiC,YAAc,EAEpBjC,EAAEW,SAAS,IACVqB,EAAOhC,EAAEiC,WAAa,MAKlC,EAAKvG,SAAS,CACVwG,WAAY,CACR/B,OAAO,YAAKP,OAAOC,KAAKmC,IACxB5B,SAAU,CACN,CACIC,MAAO,SACP/E,KAAK,YAAKsE,OAAOiB,OAAOmB,IACxB5H,gBAAiB,CACb,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBAGJkG,YAAa,CACT,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,uBAGJC,YAAa,QAlfxB,EAyfbb,UAAY,WAER,IAAIyC,EAAe,EAC0B,IAA1CvC,OAAOC,KAAK,EAAKxE,MAAMsD,QAAQmB,SAC9BqC,EAAa,EAAK9G,MAAMsD,OAAOrD,KAAKwE,OAAO,EAE3C,EAAKpE,SAAS,CAAE0G,SAASD,MA/fpB,EAogBbjD,cAAgB,WAEZ,IAAImD,EAAa,EACbC,EAAe,EAEnB,GAA4C,IAAzC1C,OAAOC,KAAK,EAAKxE,MAAM4C,OAAO6B,OAAa,CAE1C,IAAI,IAAIyC,EAAI,EAAGA,EAAI,EAAKlH,MAAM4C,MAAM3C,KAAKwE,OAAQyC,IACA,IAA1C,EAAKlH,MAAM4C,MAAM3C,KAAKiH,GAAGC,cACxBH,IAE8C,IAA/C,EAAKhH,MAAM4C,MAAM3C,KAAKiH,GAAGE,mBACxBH,IAKR,EAAK5G,SAAS,CAACgH,SAAU,EAAKrH,MAAM4C,MAAM3C,KAAKwE,OAAS,IAExD,EAAKpE,SAAS,CAAEiH,SAAUN,IAE1B,EAAK3G,SAAS,CAAEkH,SAAUN,MAzhBrB,EA+hBbhD,YAAY,WAIJ,IAHJ,IAAIuD,EAAa,EAAKxH,MAAMkD,OAAOjD,KAAKwE,OAEhCgD,EAAQ,EACJP,EAAI,EAAGA,EAAI,EAAKlH,MAAMkD,OAAOjD,KAAKwE,OAAQyC,IACH,IAAxC,EAAKlH,MAAMkD,OAAOjD,KAAKiH,GAAGQ,WACzBD,IAKR,EAAKpH,SAAS,CAAEsH,SAAUH,EAAaC,EAAQ,IAE/C,EAAKpH,SAAS,CAACuH,SAASH,KA5iBnB,EAgjBbrD,YAAc,WAEV,IAAIyD,EAAQ,EACRC,EAAQ,EACqC,IAA9CvD,OAAOC,KAAK,EAAKxE,MAAMkE,YAAYO,SAClC,EAAKzE,MAAMkE,WAAWjE,KAAKyE,SAAQ,SAAAC,GACP,IAArBA,EAAEoD,eACDF,IAEyB,IAArBlD,EAAEoD,gBACND,OAKR,EAAKzH,SAAS,CAAE2H,SAAUH,IAE1B,EAAKxH,SAAS,CAAE4H,SAAUH,MA/jB9B,EAAK9H,MAAQ,CACT6E,WAAW,GACXU,WAAY,GACZI,WAAY,GACZK,WAAY,GACZI,WAAY,GACZG,WAAY,GACZG,WAAY,GACZG,WAAW,GACXjE,MAAO,GACPM,OAAQ,GACRgB,WAAY,GACZZ,OAAQ,GACRyD,SAAS,EACTM,SAAS,EACTM,SAAS,EACTL,SAAS,EACTY,SAAS,EACTF,SAAS,EACTC,SAAS,EACTV,SAAS,GAtBJ,E,qDAykBT,OACI,yBAAK5I,UAAU,WACX,yBAAKA,UAAU,UAAUC,MAAO,CAACY,UAAU,SAASD,QAAQ,uBACxD,4BAAI,0BAAMX,MAAO,CAACuJ,WAAW,IAAIC,UAAU,MAAMC,aAAa,MAAMC,MAAM,YAAtE,6DAGR,yBAAK3J,UAAU,aACX,kBAAC,EAAD,CACIsB,KAAMG,KAAKJ,MAAM+G,SACjB7G,MAAM,gBACNC,KAAK,uCAET,kBAAC,EAAD,CACIF,KAAMG,KAAKJ,MAAMqH,SACjBnH,MAAM,gBACNC,KAAK,6BAET,kBAAC,EAAD,CACIF,KAAMG,KAAKJ,MAAM2H,SACjBzH,MAAM,gBACNC,KAAK,6CAET,kBAAC,EAAD,CACIF,KAAMG,KAAKJ,MAAMsH,SACjBpH,MAAM,mBACNC,KAAK,qCAET,kBAAC,EAAD,CACIF,KAAMG,KAAKJ,MAAM4H,SACjB1H,MAAM,gBACNC,KAAK,sCAET,kBAAC,EAAD,CACIF,KAAMG,KAAKJ,MAAMgI,SACjB9H,MAAM,cACNC,KAAK,oCAET,kBAAC,EAAD,CACIF,KAAMG,KAAKJ,MAAMiI,SACjB/H,MAAM,cACNC,KAAK,mCAET,kBAAC,EAAD,CACIF,KAAMG,KAAKJ,MAAMuH,SACjBrH,MAAM,yBACNC,KAAK,uEAIb,yBAAKxB,UAAU,SACX,kBAAC,EAAD,CACI6B,YAAY,MACZe,eAAe,EACfhB,UAAWH,KAAKJ,MAAM6E,WACtBzD,UAAU,iCACd,kBAAC,EAAD,CACIZ,YAAY,MACZD,UAAWH,KAAKJ,MAAM2F,WACtBvE,UAAU,WAEd,kBAAC,EAAD,CACIZ,YAAY,MACZe,eAAe,EACfhB,UAAWH,KAAKJ,MAAMuF,WACtBnE,UAAU,mBAEd,kBAAC,EAAD,CACIZ,YAAY,MACZD,UAAWH,KAAKJ,MAAMgG,WACtB5E,UAAU,gCAEd,kBAAC,EAAD,CACIZ,YAAY,gBACZe,eAAe,EACfhB,UAAWH,KAAKJ,MAAMoG,WACtBhF,UAAU,wBAEd,kBAAC,EAAD,CACIZ,YAAY,OACZe,eAAe,EACfhB,UAAWH,KAAKJ,MAAMuG,WACtBnF,UAAU,wBAEd,kBAAC,EAAD,CACIZ,YAAY,gBACZe,eAAe,EAAOhB,UAAWH,KAAKJ,MAAM0G,WAC5CtF,UAAU,4BAEd,kBAAC,EAAD,CACIZ,YAAY,gBACZe,eAAe,EAAOhB,UAAWH,KAAKJ,MAAM6G,WAC5CzF,UAAU,iC,GArqBRvB,aCIX0I,E,uKATX,OACI,yBAAK5J,UAAU,MAAMC,MAAO,CAAC4J,WAAW,OAAOC,UAAU,SACrD,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANM5I,aCQZ6I,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzJ,QACfmJ,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,gHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC3FjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDiB1C,SAAkBpB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,iBAAwB5B,OAAOC,SAASpJ,MACpDgL,SAAW7B,OAAOC,SAAS4B,OAIvC,OAGF7B,OAAO8B,iBAAiB,QAAQ,WAC9B,IAAMzB,EAAK,UAAMuB,iBAAN,sBAEP9B,IAgEV,SAAiCO,EAAOC,GAEtCyB,MAAM1B,GACHK,MAAK,SAAAsB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C9B,UAAUC,cAAc8B,MAAM5B,MAAK,SAAAC,GACjCA,EAAa4B,aAAa7B,MAAK,WAC7BV,OAAOC,SAASuC,eAKpBpC,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEArFAuB,CAAwBpC,EAAOC,GAI/BC,UAAUC,cAAc8B,MAAM5B,MAAK,WACjCO,QAAQC,IACN,gHAMJd,EAAgBC,EAAOC,OCxC/BE,I,mBCVAkC,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.c4acb6f7.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport atlanlogo from '../../img/atlanlogo.svg';\r\n\r\nclass Header extends Component {\r\n    render(){\r\n        return (\r\n            <div className='header' style={{\r\n                                            position:\"fixed\",\r\n                                            height: \"60px\",\r\n                                            backgroundColor: \"#2026D2\",\r\n                                            boxShadow: \"0 3px 6px rgba(0,0,0,0.03),0 3px 6px rgba(0,0,0,0.08)\",\r\n                                            left: \"0px\",\r\n                                            right: \"0px\",\r\n                                            top: \"0px\",\r\n                                            zIndex: \"100\"\r\n                                            }}>\r\n                <div className='center-bar' style={{margin: \"0 auto\",\r\n                                                    width: \"50%\",\r\n                                                    height: \"100%\",\r\n                                                    padding: \"8px 20px\",\r\n                                                    textAlign: \"center\"\r\n                                                    }}>\r\n                    <a href='https://atlan.com'><img style={{width:\"100%\",height:\"40px\"}}src={atlanlogo} alt='Logo' /></a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Header;","import React,{Component} from 'react';\r\nimport './infobox.css';\r\n\r\nclass Infobox extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: this.props.data,\r\n            title: this.props.title,\r\n            text: this.props.text\r\n        }\r\n\r\n\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(){\r\n        this.setState({\r\n            data: this.props.data,\r\n            title: this.props.title,\r\n            text: this.props.text\r\n        });\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className='infobox'>\r\n                <div className='infobox_title'>\r\n                    <p>{this.props.title}</p>\r\n                </div>\r\n                <div className='infobox_text'>\r\n                    <p>{this.props.text}</p>\r\n                </div>\r\n                <div className='infobox_data'>\r\n                    {this.props.data}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Infobox;","import React,{Component} from 'react';\r\nimport './chart.css';\r\nimport ChartComponent from 'react-chartjs-2';\r\n\r\nclass Charts extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            chartData: this.props.chartData,\r\n            selectChart: this.props.selectChart\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(){\r\n        this.setState({\r\n            chartData: this.props.chartData,\r\n            selectChart: this.props.selectChart\r\n        });\r\n    }\r\n\r\n    static defaultProps = {\r\n        selectChart: 'Bar',\r\n        displayTitle: true,\r\n        titleText: 'Enter a title',\r\n        displayLegend: true,\r\n        legendPosition: 'center',\r\n        selectLabel: false,\r\n        selectLabelText: ''\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='chart' >\r\n                <ChartComponent\r\n                    type={this.state.selectChart}\r\n                    data={this.state.chartData ? this.state.chartData : {}}\r\n                    options={{\r\n                        plugins: {\r\n                            deferred: {\r\n                              xOffset: 50,\r\n                              yOffset: '40%',\r\n                              delay: 25\r\n                            }\r\n                        },\r\n                        maintainAspectRatio: false,\r\n                        responsive: true,\r\n                        title: {\r\n                            display: this.props.displayTitle,\r\n                            text: this.props.titleText,\r\n                            fontSize: 25\r\n                        },\r\n                        legend: {\r\n                            display: this.props.displayLegend\r\n                        },\r\n                        scales: this.props.selectChart === 'pie'? \r\n                        {\r\n                            xAxis: [{\r\n                                gridLineWidth: 0,\r\n                            }],\r\n                            yAxis: [{\r\n                                gridLineWidth: 0,\r\n                                minorTickInterval: null\r\n                            }]\r\n                        }\r\n                        :{\r\n                            xAxes:[{\r\n                                scaleLabel: {\r\n                                    display: this.props.selectLabel ? true : false,\r\n                                    labelString: this.props.selectLabelText\r\n                                }\r\n                            }],\r\n                            yAxes: [{\r\n                                ticks: {\r\n                                    beginAtZero:true\r\n                                }\r\n                            }]\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Charts;","import React,{Component} from 'react';\r\nimport Papa from 'papaparse';\r\nimport './data_visual_stats.css';\r\nimport Infobox from '../infoboxes/infobox';\r\nimport Charts from '../charts/chart';\r\nimport Match from '../../assets/Match.csv';\r\nimport Player from '../../assets/Player.csv';\r\nimport Ball_by_Ball from '../../assets/Ball_by_Ball.csv';\r\nimport Season from '../../assets/Season.csv';\r\n\r\n\r\n\r\nclass DataContent extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            chartinfo1:{},\r\n            chartinfo2: {},\r\n            chartinfo3: {},\r\n            chartinfo4: {},\r\n            chartinfo5: {},\r\n            chartinfo6: {},\r\n            chartinfo7: {},\r\n            chartinfo8:{},\r\n            Match: {},\r\n            Player: {},\r\n            BallByBall: {},\r\n            Season: {},\r\n            infobox1:0,\r\n            infobox2:0,\r\n            infobox3:0,\r\n            infobox4:0,\r\n            Infobox5:0,\r\n            infobox6:0,\r\n            infobox7:0,\r\n            infobox8:0,\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount=()=>{\r\n        this.fetchData();\r\n    }\r\n\r\n    //CSV file to JSON \r\n    fetchData = () => {\r\n        Papa.parse(Match, {\r\n            header: true,\r\n            download: true,\r\n            dynamicTyping: true,\r\n            complete: this.savingmatch\r\n        });\r\n        Papa.parse(Player, {\r\n            header: true,\r\n            download: true,\r\n            dynamicTyping: true,\r\n            complete: this.savingplayer\r\n        });\r\n         Papa.parse(Ball_by_Ball, {\r\n            header: true,\r\n            download: true,\r\n            dynamicTyping: true,\r\n            complete: this.savingballbyball\r\n        });\r\n         Papa.parse(Season, {\r\n            header: true, \r\n            download: true, \r\n            dynamicTyping: true,\r\n            complete: this.savingseason\r\n        });\r\n\r\n    }\r\n\r\n    // data saving and function calling\r\n    savingmatch= (res) => {\r\n         this.setState({ Match: res });\r\n         this.infochart1();\r\n         this.infochart2();\r\n         this.infochart3();\r\n         this.infochart8();\r\n         this.databox_2_4_8();\r\n    }\r\n    savingplayer= (res) => {\r\n         this.setState({ Player: res });\r\n         this.infochart4();\r\n         this.infochart5();\r\n         this.infochart6();\r\n         this.databox_3_5();\r\n    }\r\n    savingballbyball = (res) => {\r\n           this.setState({ BallByBall: res });\r\n        //   this.infochart7();\r\n         this.infochart7();\r\n          this.databox_6_7();\r\n    }\r\n    savingseason = (res) => {\r\n         this.setState({Season: res});\r\n         this.databox_1();\r\n    }\r\n\r\n\r\n    infochart1 = () => {\r\n        //Toss\r\n        let batcount = 0;\r\n        if(Object.keys(this.state.Match).length !== 0){\r\n            this.state.Match.data.forEach(e => {\r\n                if(e.Toss_Decision === \"bat\"){\r\n                    batcount++;\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                chartinfo1: {\r\n                    labels: ['Bat', 'Field'],\r\n                    datasets: [\r\n                        {\r\n                            label: 'Bat or Field Decision',\r\n                            data: [batcount, this.state.Match.data.length - batcount],\r\n                            backgroundColor: [\r\n                                'rgb(236, 239, 43,0.75)',\r\n                                'rgb(102, 244, 128,0.75)'\r\n                            ],\r\n                            borderColor: [\r\n                                'rgb(236, 239, 43,1)',\r\n                                'rgb(102, 244, 128,1)'\r\n                            ],\r\n                            borderWidth: 1\r\n                        }\r\n                    ]\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    infochart2 = () => {\r\n        // Host Countries\r\n        let countries = {};\r\n        if(Object.keys(this.state.Match).length !== 0){\r\n            this.state.Match.data.forEach(e => {\r\n                if(countries[e.Host_Country] !== undefined) {\r\n                    countries[e.Host_Country] += 1;\r\n                } else {\r\n                    if(e.Match_Id>0){\r\n                        countries[e.Host_Country] = 1;\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                chartinfo2: {\r\n                    labels: [...Object.keys(countries)],\r\n                    datasets: [\r\n                        {\r\n                            label: 'Host Countries',\r\n                            data: [...Object.values(countries)],\r\n                            backgroundColor: [\r\n                                'rgb(239, 137, 119,0.75)',\r\n                                'rgb(247, 158, 236,0.75)',\r\n                                'rgb(153, 158, 247,0.75)',\r\n                            ],\r\n                            borderColor: [\r\n                                'rgb(239, 137, 119,1)',\r\n                                'rgb(247, 158, 236,1)',\r\n                                'rgb(153, 158, 247,1)',\r\n                            ],\r\n                            borderWidth: 1\r\n                        }\r\n                    ]\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    infochart3 = () => {\r\n        // Result Type\r\n        let winType = {};\r\n        if(Object.keys(this.state.Match).length !== 0){\r\n            this.state.Match.data.forEach(e => {\r\n                if(winType[e.Win_Type] !== undefined) {\r\n                    winType[e.Win_Type] += 1;\r\n                } else{\r\n                    if(e.Match_Id>0){\r\n                        winType[e.Win_Type] = 1;\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                chartinfo3: {\r\n                    labels: [...Object.keys(winType)],\r\n                    datasets: [\r\n                        {\r\n                            label: 'Result Type',\r\n                            data: [...Object.values(winType)],\r\n                            backgroundColor: [\r\n                                'rgb(239, 137, 119,0.75)',\r\n                                'rgb(247, 158, 236,0.75)',\r\n                                'rgb(244, 224, 141,0.75)',\r\n                                'rgb(153, 158, 247,0.75)',\r\n                            ],\r\n                            borderColor: [\r\n                                'rgb(239, 137, 119,1)',\r\n                                'rgb(252, 184, 201,1)',\r\n                                'rgb(244, 224, 141,1)',\r\n                                'rgb(153, 158, 247,1)',\r\n                            ],\r\n                            borderWidth: 1\r\n                        }\r\n                    ]\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    infochart4 = () => {\r\n        // Right or Left Handed Batsman\r\n        var handType = {};\r\n        if(Object.keys(this.state.Player).length !== 0){\r\n            handType.Left_Hand = 0;\r\n            handType.Right_Hand = 0;\r\n            this.state.Player.data.forEach(e => {\r\n                if(e.Batting_Hand === \"Left_Hand\" || e.Batting_Hand === \"Right_Hand\") {\r\n                    handType[e.Batting_Hand] += 1;\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                chartinfo4: {\r\n                    labels: [...Object.keys(handType)],\r\n                    datasets: [\r\n                        {\r\n                            label: 'Left or Right Handed Batsmen',\r\n                            data: [...Object.values(handType)],\r\n                            backgroundColor: [\r\n                                'rgb(138, 247, 245,0.75)',\r\n                                'rgb(153, 158, 247,0.75)',\r\n                            ],\r\n                            borderColor: [\r\n                                'rgb(138, 247, 245,1)',\r\n                                'rgb(153, 158, 247,1)',\r\n                            ],\r\n                            borderWidth: 1\r\n                        }\r\n                    ]\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    infochart5 = () => {\r\n        // Bowling Skills\r\n        var bowlingSkill = {};\r\n        if(Object.keys(this.state.Player).length !== 0){\r\n            this.state.Player.data.forEach(e => {\r\n                if(bowlingSkill[e.Bowling_Skill] !== undefined) {\r\n                    bowlingSkill[e.Bowling_Skill] += 1;\r\n                } else {\r\n                    if(e.Player_Id!=null && e.Bowling_Skill!==\"NULL\"){\r\n                        bowlingSkill[e.Bowling_Skill] = 1;\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n\r\n            this.setState({\r\n                chartinfo5: {\r\n                    labels: [...Object.keys(bowlingSkill)],\r\n                    datasets: [\r\n                        {\r\n                            label: 'Bowling Skill',\r\n                            data: [...Object.values(bowlingSkill)],\r\n                            backgroundColor: [\r\n                                'rgb(239, 137, 119,0.75)',\r\n                                'rgb(252, 184, 201,0.75)',\r\n                                'rgb(244, 224, 141,0.75)',\r\n                                'rgb(138, 247, 245,0.75)',\r\n                                'rgb(118, 242, 36,0.75)',\r\n                                'rgb(247, 158, 236,0.75)',\r\n                                'rgb(153, 158, 247,0.75)',\r\n                                'rgb(141, 252, 178,0.75)',\r\n                                'rgb(215, 136, 239,0.75)',\r\n                                'rgb(247, 153, 98,0.75)',\r\n                                'rgb(154, 172, 244,0.75)',\r\n                                'rgb(198, 124, 67,0.75)',\r\n                                'rgb(54, 237, 151,0.75)',\r\n                                'rgb(236, 239, 43,0.75)',\r\n                                'rgb(102, 244, 128,0.75)'\r\n                            ],\r\n                            borderColor: [\r\n                                'rgb(239, 137, 119,1)',\r\n                                'rgb(252, 184, 201,1)',\r\n                                'rgb(244, 224, 141,1)',\r\n                                'rgb(138, 247, 245,1)',\r\n                                'rgb(118, 242, 36,1)',\r\n                                'rgb(247, 158, 236,1)',\r\n                                'rgb(153, 158, 247,1)',\r\n                                'rgb(141, 252, 178,1)',\r\n                                'rgb(215, 136, 239,1)',\r\n                                'rgb(247, 153, 98,1)',\r\n                                'rgb(154, 172, 244,1)',\r\n                                'rgb(198, 124, 67,1)',\r\n                                'rgb(54, 237, 151,1)',\r\n                                'rgb(236, 239, 43,1)',\r\n                                'rgb(102, 244, 128,1)'\r\n                            ],\r\n                            borderWidth: 1\r\n                        }\r\n                    ]\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    infochart6 = () => {\r\n        // Players Nationality\r\n        var nationality = {};\r\n        if(Object.keys(this.state.Player).length !== 0){\r\n            this.state.Player.data.forEach(e => {\r\n                if(nationality[e.Country] !== undefined) {\r\n                    nationality[e.Country] += 1;\r\n                } else {\r\n                    if(e.Player_Id!=null){\r\n                        nationality[e.Country] = 1;\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                chartinfo6: {\r\n                    labels: [...Object.keys(nationality)],\r\n                    datasets: [\r\n                        {\r\n                            label: 'Player Nationality',\r\n                            data: [...Object.values(nationality)],\r\n                            backgroundColor: [\r\n                                'rgb(239, 137, 119,0.75)',\r\n                                'rgb(252, 184, 201,0.75)',\r\n                                'rgb(244, 224, 141,0.75)',\r\n                                'rgb(138, 247, 245,0.75)',\r\n                                'rgb(118, 242, 36,0.75)',\r\n                                'rgb(247, 158, 236,0.75)',\r\n                                'rgb(153, 158, 247,0.75)',\r\n                                'rgb(141, 252, 178,0.75)',\r\n                                'rgb(215, 136, 239,0.75)',\r\n                                'rgb(247, 153, 98,0.75)',\r\n                            ],\r\n                            borderColor: [\r\n                                'rgb(239, 137, 119,1)',\r\n                                'rgb(252, 184, 201,1)',\r\n                                'rgb(244, 224, 141,1)',\r\n                                'rgb(138, 247, 245,1)',\r\n                                'rgb(118, 242, 36,1)',\r\n                                'rgb(247, 158, 236,1)',\r\n                                'rgb(153, 158, 247,1)',\r\n                                'rgb(141, 252, 178,1)',\r\n                                'rgb(215, 136, 239,1)',\r\n                                'rgb(247, 153, 98,1)',\r\n                            ],\r\n                            borderWidth: 1\r\n                        }\r\n                    ]\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    infochart7 = () => {\r\n        // Types of Dismissals\r\n        var dismissalType = {};\r\n        if(Object.keys(this.state.BallByBall).length !== 0){\r\n            this.state.BallByBall.data.forEach(e => {\r\n                if(dismissalType[e.Dissimal_Type] !== undefined) {\r\n                    dismissalType[e.Dissimal_Type] += 1;\r\n                } \r\n                else if(e.Dissimal_Type !== undefined && e.Dissimal_Type !== ' ') {\r\n                    dismissalType[e.Dissimal_Type] = 1;\r\n                }\r\n            });\r\n\r\n\r\n            this.setState({\r\n                chartinfo7: {\r\n                    labels: [...Object.keys(dismissalType)],\r\n                    datasets: [\r\n                        {\r\n                            label: 'Types of Dismissals',\r\n                            data: [...Object.values(dismissalType)],\r\n                            backgroundColor: [\r\n                                'rgb(239, 137, 119,0.75)',\r\n                                'rgb(252, 184, 201,0.75)',\r\n                                'rgb(244, 224, 141,0.75)',\r\n                                'rgb(138, 247, 245,0.75)',\r\n                                'rgb(118, 242, 36,0.75)',\r\n                                'rgb(247, 158, 236,0.75)',\r\n                                'rgb(153, 158, 247,0.75)',\r\n                                'rgb(141, 252, 178,0.75)',\r\n                                'rgb(215, 136, 239,0.75)',\r\n                            ],\r\n                            borderColor: [\r\n                                'rgb(239, 137, 119,1)',\r\n                                'rgb(252, 184, 201,1)',\r\n                                'rgb(244, 224, 141,1)',\r\n                                'rgb(138, 247, 245,1)',\r\n                                'rgb(118, 242, 36,1)',\r\n                                'rgb(247, 158, 236,1)',\r\n                                'rgb(153, 158, 247,1)',\r\n                                'rgb(141, 252, 178,1)',\r\n                                'rgb(215, 136, 239,1)'\r\n                            ],\r\n                            borderWidth: 1\r\n                        }\r\n                    ]\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n    infochart8 = () => {\r\n        // Host Cities\r\n        let cities={};\r\n            this.state.Match.data.forEach(e => {\r\n                if(cities[e.City_Name] !== undefined) {\r\n                    cities[e.City_Name] += 1;\r\n                } else {\r\n                    if(e.Match_Id>0){\r\n                        cities[e.City_Name] = 1;\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                chartinfo8: {\r\n                    labels: [...Object.keys(cities)],\r\n                    datasets: [\r\n                        {\r\n                            label: 'Cities',\r\n                            data: [...Object.values(cities)],\r\n                            backgroundColor: [\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n                                'rgba(9, 168, 250,0.5)',\r\n\r\n                            ],\r\n                            borderColor: [\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n                                'rgba(9, 168, 250,1)',\r\n\r\n                            ],\r\n                            borderWidth: 1\r\n                        }\r\n                    ]\r\n                }\r\n            });\r\n    }\r\n\r\n    databox_1 = () => {\r\n\r\n        let totalseasons = 0;\r\n        if(Object.keys(this.state.Season).length !== 0){\r\n            totalseasons=this.state.Season.data.length-1\r\n            //Number of seasons\r\n            this.setState({ infobox1:totalseasons});\r\n        }\r\n\r\n    }\r\n\r\n    databox_2_4_8 = () => {        \r\n\r\n        let superovers = 0;\r\n        let duckworthlewis=0;\r\n\r\n        if(Object.keys(this.state.Match).length !== 0){\r\n\r\n            for(var i = 0; i < this.state.Match.data.length; i++){\r\n                if(this.state.Match.data[i].IS_Superover === 1){\r\n                    superovers++;\r\n                }\r\n                if(this.state.Match.data[i].Is_DuckWorthLewis === 1){\r\n                    duckworthlewis++;\r\n                }\r\n            }\r\n\r\n            // Number of Matches\r\n            this.setState({infobox2: this.state.Match.data.length - 1});\r\n            // Number of Superovers\r\n            this.setState({ infobox4: superovers });\r\n            // Number of DuckWorthLewis\r\n            this.setState({ infobox8: duckworthlewis });\r\n\r\n\r\n        }\r\n    }\r\n\r\n    databox_3_5=()=>{\r\n        var totalplayers=this.state.Player.data.length;\r\n            \r\n            var umpires=0;\r\n            for(var i = 0; i < this.state.Player.data.length; i++){\r\n                if(this.state.Player.data[i].Is_Umpire === 1){\r\n                    umpires++;\r\n                }\r\n            }\r\n\r\n            //Number of players\r\n            this.setState({ infobox3: totalplayers-umpires-1});\r\n            //Number of umpires\r\n            this.setState({infobox5:umpires})\r\n\r\n    }\r\n\r\n    databox_6_7 = () => {\r\n\r\n        let fours = 0;\r\n        let sixes = 0;\r\n        if(Object.keys(this.state.BallByBall).length !== 0){\r\n            this.state.BallByBall.data.forEach(e => {\r\n                if(e.Batsman_Scored === 4) {\r\n                    fours++;\r\n                }\r\n                else if(e.Batsman_Scored === 6) {\r\n                    sixes++;\r\n                }\r\n            });\r\n\r\n            // Number of Fours\r\n            this.setState({ infobox6: fours});\r\n            // Number of Sixes\r\n            this.setState({ infobox7: sixes });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='content'>\r\n                <div className='heading' style={{textAlign:\"center\",padding:\"25px 25px 0px 25px\"}}>\r\n                    <h1><span style={{fontWeight:700,marginTop:\"0px\",marginBottom:\"0px\",color:\"#424A52\"}}>Indian Premier League Statistics and Data Visualization</span></h1>\r\n                </div>\r\n\r\n                <div className='infoboxes'>\r\n                    <Infobox \r\n                        data={this.state.infobox1} \r\n                        title='Total Seasons' \r\n                        text='Total Number of Seasons Organized.'\r\n                    />\r\n                    <Infobox \r\n                        data={this.state.infobox2} \r\n                        title='Total Matches' \r\n                        text='Matches played till now.' \r\n                    />\r\n                    <Infobox \r\n                        data={this.state.infobox3} \r\n                        title='Total Players' \r\n                        text='Total Number of Players played till now.'\r\n                    />\r\n                    <Infobox \r\n                        data={this.state.infobox4} \r\n                        title='Total Superovers' \r\n                        text='Number of draw matches till now.'\r\n                    />\r\n                    <Infobox \r\n                        data={this.state.infobox5} \r\n                        title='Total Umpires' \r\n                        text='Total Number of Umpires till now.'\r\n                    />\r\n                    <Infobox \r\n                        data={this.state.infobox6} \r\n                        title='Total Fours' \r\n                        text='Number of balls going for four.'  \r\n                    />\r\n                    <Infobox \r\n                        data={this.state.infobox7} \r\n                        title='Total Sixes' \r\n                        text='Number of balls going for six.'  \r\n                    />\r\n                    <Infobox \r\n                        data={this.state.infobox8} \r\n                        title='Total Duck Worth Lewis' \r\n                        text='Number of times match is affected by rain or other interruptions.'  \r\n                    />\r\n                </div>\r\n\r\n                <div className='graph'>\r\n                    <Charts \r\n                        selectChart='bar' \r\n                        displayLegend={false} \r\n                        chartData={this.state.chartinfo1} \r\n                        titleText='Toss Decision (Bat or Field)' />\r\n                    <Charts\r\n                        selectChart='pie' \r\n                        chartData={this.state.chartinfo3} \r\n                        titleText='Result' \r\n                    />\r\n                    <Charts\r\n                        selectChart='bar' \r\n                        displayLegend={false}\r\n                        chartData={this.state.chartinfo2} \r\n                        titleText='Host Countries' \r\n                    />\r\n                    <Charts\r\n                        selectChart='pie' \r\n                        chartData={this.state.chartinfo4} \r\n                        titleText='Right / Left Handed Batsman' \r\n                    />\r\n                    <Charts\r\n                        selectChart='horizontalBar' \r\n                        displayLegend={false} \r\n                        chartData={this.state.chartinfo5} \r\n                        titleText='Bowling Skill Types' \r\n                    />\r\n                    <Charts \r\n                        selectChart='line' \r\n                        displayLegend={false} \r\n                        chartData={this.state.chartinfo6} \r\n                        titleText='Players Nationality' \r\n                    />\r\n                    <Charts \r\n                        selectChart='horizontalBar'\r\n                        displayLegend={false} chartData={this.state.chartinfo7} \r\n                        titleText='Players Dismissal Types' \r\n                    />\r\n                    <Charts\r\n                        selectChart='horizontalBar'\r\n                        displayLegend={false} chartData={this.state.chartinfo8} \r\n                        titleText='Cities Hosting Matches' \r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataContent;\r\n","import React, { Component } from 'react';\r\nimport Header from './components/header/header';\r\nimport DataContent from './components/data_visual_stats/data_visual_stats';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"App\" style={{background:\"#fff\",overflowY:\"auto\"}}>\r\n            <Header />\r\n            <DataContent />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n//    // \"deploy\": \"gh-pages -d build\",\r\n    // \"build\": \"react-scripts build\",","module.exports = __webpack_public_path__ + \"static/media/atlanlogo.40c9d1d3.svg\";","module.exports = __webpack_public_path__ + \"static/media/Match.9fc57626.csv\";","module.exports = __webpack_public_path__ + \"static/media/Player.ff8fbde8.csv\";","module.exports = __webpack_public_path__ + \"static/media/Ball_by_Ball.96f5d1a1.csv\";","module.exports = __webpack_public_path__ + \"static/media/Season.1315c877.csv\";"],"sourceRoot":""}